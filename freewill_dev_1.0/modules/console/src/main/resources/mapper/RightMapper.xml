<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.freewill.console.mapper.RightMapper" >
  <resultMap id="BaseResultMap" type="com.freewill.console.system.entity.Right" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="right_name" property="rightName" jdbcType="VARCHAR" />
    <result column="right_code" property="rightCode" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="group_right" property="groupRight" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, right_name, right_code, remark, parent_id, type, group_right
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from right
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from right
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.freewill.console.system.entity.Right" >
    insert into right (id, right_name, right_code, 
      remark, parent_id, type, 
      group_right)
    values (#{id,jdbcType=INTEGER}, #{rightName,jdbcType=VARCHAR}, #{rightCode,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{groupRight,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.freewill.console.system.entity.Right" >
    insert into right
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rightName != null" >
        right_name,
      </if>
      <if test="rightCode != null" >
        right_code,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="groupRight != null" >
        group_right,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rightName != null" >
        #{rightName,jdbcType=VARCHAR},
      </if>
      <if test="rightCode != null" >
        #{rightCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="groupRight != null" >
        #{groupRight,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.freewill.console.system.entity.Right" >
    update right
    <set >
      <if test="rightName != null" >
        right_name = #{rightName,jdbcType=VARCHAR},
      </if>
      <if test="rightCode != null" >
        right_code = #{rightCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="groupRight != null" >
        group_right = #{groupRight,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.freewill.console.system.entity.Right" >
    update right
    set right_name = #{rightName,jdbcType=VARCHAR},
      right_code = #{rightCode,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      group_right = #{groupRight,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="listAll" resultMap="BaseResultMap">
      select 
      <include refid="Base_Column_List" />
      from `right`
      <where>
      	<if test="type != null">
      		type=#{type}
      	</if>
      	<if test="!includeGroupRight">
          	group_right = 0
      	</if> 
      </where>
  </select>
</mapper>
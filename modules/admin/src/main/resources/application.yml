# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 60000
  servlet:
    context-path: /


spring:
  profiles:
      active: @spring.profiles.active@
  jackson:
    time-zone: GMT+8


  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true

#可以404抛出NoHandlerFoundException
  mvc:
    throw-exception-if-no-handler-found: true
    static-path-pattern: /static
#热部署关闭
  devtools:
      restart:
        enabled: true

#AOP config
  aop:
    proxy-target-class: true

#Druid数据源
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      druid:
        # 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
        initial-size: 0
        min-idle: 10
        max-active: 300
        # 配置获取连接等待超时的时间
        max-wait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT '1'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        remove-abandoned: true
        remove-abandoned-timeout: 7200
        log-abandoned: true
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,log4j2
        # 合并多个DruidDataSource的监控数据
        #spring.datasource.useGlobalDataSourceStat=true
        filter:
          stat:
            merge-sql: true
            slow-sql-millis: 200
            log-slow-sql: true
          log4j2:
            connection-log-enabled: true
            enabled: true
        #创建servlet注册实体
        stat-view-servlet:
        #设置ip白名单
          allow: 127.0.0.1
        #设置ip黑名单，如果allow与deny共同存在时,deny优先于allow
          reset-enable: false
        web-stat-filter:
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
          url-pattern: /*
        # Druid AOP config
        aop-patterns: com.freewill.admin.*.controller.*
        name: Freewill
        driver-class-name: com.mysql.jdbc.Driver
        url: @jdbc.url@
        username: @jdbc.username@
        password: @jdbc.password@
redis:
   host: @redis.host@
   port: @redis.port@
   password: @redis.password@

#mybatis
mybatis-plus:
   mapper-locations: classpath*:mapping/*Mapper.xml
   #实体扫描，多个package用逗号或者分号分隔
   type-aliases-package: com.freewill.admin.entity
   global-config:
     db-config:
        db-type: mysql
        #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
        id-type: AUTO
        #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
        field-strategy: NOT_NULL
        #驼峰下划线转换
        table-underline: true
        #数据库大写下划线转换
        #capital-mode: true
        # Sequence序列接口实现类配置
        #key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
        #逻辑删除配置
        logic-delete-value: -1
        logic-not-delete-value: 0
        #自定义填充策略接口实现
        #meta-object-handler: com.baomidou.springboot.xxx
        #自定义SQL注入器 com.baomidou.mybatisplus.mapper.LogicSqlInjector
   configuration:
      lazy-loading-enabled: true
      map-underscore-to-camel-case: true
      cache-enabled: false
      call-setters-on-nulls: true

##监控跟踪
#management:
#  server:
#    port: 60001
#  endpoints:
#    enabled-by-default: true
#    web:
#      base-path: /actuator
#      exposure:
#           include: '*'
#  endpoint:
#    health:
#      show-details: always


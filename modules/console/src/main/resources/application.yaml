#web
server:
  port: 60000
  servlet:
    context-path: /


spring:
#可以404抛出NoHandlerFoundException
  mvc:
    throw-exception-if-no-handler-found: true
    static-path-pattern: /static

#thymeleaf模板
#  thymeleaf:
#    cache: true
#    prefix: classpath:/templates
#    suffix: .html
#    mode: HTML
#    encoding: utf-8
#    check-template-location: true

#热部署关闭
  devtools:
      restart:
        enabled: true
#AOP config
  aop:
    proxy-target-class: true

#Druid数据源
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      druid:
        # 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
        initial-size: 0
        min-idle: 10
        max-active: 300
        # 配置获取连接等待超时的时间
        max-wait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT '1'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        remove-abandoned: true
        remove-abandoned-timeout: 7200
        log-abandoned: true
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 合并多个DruidDataSource的监控数据
        #spring.datasource.useGlobalDataSourceStat=true
        filter:
          stat:
            merge-sql: true
            slow-sql-millis: 200
            log-slow-sql: true
          slf4j:
            connection-log-enabled: true
            enabled: true
        #创建servlet注册实体
        stat-view-servlet:
        #设置ip白名单
          allow: 127.0.0.1
        #设置ip黑名单，如果allow与deny共同存在时,deny优先于allow
          login-username: admin
          login-password: admin
          reset-enable: false
        web-stat-filter:
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
          url-pattern: /*
        # Druid AOP config
        aop-patterns: com.freewill.console.*.controller.*
        name: ministore
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql:// :3306/ ?useUnicode=true&characterEncoding=utf-8&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull
        username: root
        password:  

mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.freewill.console.system.entity
  type-aliases-super-type: java.lang.Object
  type-enums-package:
  type-handlers-package:
  #更改 XML 文件后，自动刷新，无需再次重启工程(生产不建议开启)
  global-config:
      refresh: true
      db-config:
            db-type: mysql
  configuration:
    lazy-loading-enabled: true

##配置redis数据库连接
#  redis:
##    host: 127.0.0.1
#    port: 6379
#    pool:
#      max-active: 20
#      max-wait: 60000
#      max-idle: 20
#      min-idle: 1
#      #默认索引为0的数据库
#    database: 0


#监控跟踪
management:
  server:
    port: 60001
  endpoints:
    enabled-by-default: true
    web:
      base-path: /actuator
      exposure:
           include: '*'
  endpoint:
    health:
      show-details: always
